// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        global_depthtex: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;
  out vec4 pos;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  out vec2 frag_uv;
  uniform unifom_datas
  {
    vec2 camera_ratio;
    vec2 basefloor_size;//整个地面的size
    vec2 camera_size; // 游戏中的canvas 的size
    vec2 camera_abs_lb; // 相机的绝对位置的左下角
  };
  #endif

  void main () {
    pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif
    float ratio = camera_ratio.x;
    vec2 abs_pos = pos.xy/2.0 + 0.5;
    vec2 frag_global_pos = camera_abs_lb + abs_pos.xy * camera_size/ratio;
    frag_uv = frag_global_pos/basefloor_size; // 在深度图中的uv 坐标   

    v_color = a_color;
    
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  in vec4 v_color;
  in vec4 pos;
  
  #if USE_TEXTURE
  in vec2 v_uv0;
  in vec2 frag_uv;
  uniform sampler2D texture;
  uniform sampler2D global_depthtex;
  uniform sampler2D depthtex;
  #endif
  // bool isalmost(a,b);
  // bool isalmost(float a,float b){
  //   return abs(b-a) <=3.0/256.0;
  // }

  void main () {
    vec4 texture_data = texture(texture, v_uv0);

    // vec2 texture_uv = 
    gl_FragColor = texture_data;
    vec4 depth = texture(depthtex ,v_uv0) * 30.0;
    vec4 global_depth = texture(global_depthtex,frag_uv) * 30.0;
    // if(global_depth.r != 0.0){
    //   gl_FragColor = global_depth;
    // }else{ 
    //   discard;
    // }
    gl_FragColor = vec4(pos.x);
  }
}%
