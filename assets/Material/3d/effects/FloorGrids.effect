// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      depthStencilState:
        depthTest: true
        depthWrite: true
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }

}%
 
 
CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>
  

  in vec3 a_position;
  // in vec4 a_color;
  in vec2 a_uv0;

  // out float grid_radius;

  
  out vec2 abs_pos;
  out float line_limit;
  // out vec4 v_color;

  uniform Datas{
    float line_width;
    float grid_radius;
    vec2 size;
  }

  void main () {
    vec4 pos = vec4(a_position, 1);
    // #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos; 
    // #else
    // pos = cc_matViewProj * pos;
    // #endif
    //vec2 size=vec2(2048.0,2048.0); // cocos creator 有一个莫名的bug(当使用 sprite 而非3d的时候) 导致这里的y和编辑器中的比例是 10 ： 9
    abs_pos = vec2(a_uv0.x,1.0-a_uv0.y) * size;
    line_limit = (grid_radius-line_width)/2.0;

    // v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  // in vec4 v_color; 
  in float line_limit;
  in vec2 abs_pos;

  // 经过测试 sampler 必须在 接口块的上方
    // 否则将 无法进行 setProperty 操作  
  uniform sampler2D info_map;
  uniform Datas{
    float line_width;
    float grid_radius;
    vec2 size;
  }
  
  void main () { 
    
    // vec2 xyratio=vec2(1.0, 1.0);
    // vec2 xylength=vec2(1.0, 1.0);  
    // vec2 infoimgsize=vec2(1024,128);     
    vec3 selectedColor = 1.0 - vec3(0,0.8,0.8);
    vec3 ocuppiedColor = 1.0 - vec3(0.8,0.0,0.0);
    vec2 grid_idx = floor(abs_pos/grid_radius);
    vec2 grid_span = abs_pos - grid_idx * grid_radius;
    vec2 is_line = vec2(step(line_limit,abs(grid_span.x - grid_radius/2.0)),step(line_limit,abs(grid_span.y - grid_radius/2.0)));
    vec4 o = vec4(1, 1, 1, 1); 
    vec4 gridInfo = texture(info_map,(grid_idx+0.5)/size);
    o.xyz -=  clamp(is_line.xxx + is_line.yyy,0.0,1.0)*0.5;
    o.xyz *= 1.0- gridInfo.r*mix(selectedColor,ocuppiedColor,gridInfo.a); 
    gl_FragColor = o;
    //gl_FragColor = vec4(pos.x,0.0,0.0,1.0);

    // //vec2 modified_uv = v_uv0;
    // vec2 ratio = floor(size/1024.0); 
    // vec2 modified_uv = vec2((xyratio.x + v_uv0.x - v_uv0.y*xyratio.x)*xylength.x,(v_uv0.y + v_uv0.x*xyratio.y)*xylength.y)*ratio;
    // vec2 grid_idx = floor(modified_uv/density);
    // vec2 grid_span = modified_uv - grid_idx*density; 
    // vec2 is_line = vec2(step(density-0.001,grid_span.x),step(density-0.001,grid_span.y));
    // o.xyz -= is_line.xxx+is_line.yyy;
    // o.xyz *= 1.0- gridInfo.r*mix(selectedColor,ocuppiedColor,gridInfo.a); 
    
 
    // if(curpos == grid_idx){
    //     o.xyz*=vec3(0,0.8,0.8);
    // }

    //o.rgb = texture(texture,grid_idx/infoimgsize).rgb;
    // int idx = int(grid_idx.y*infoimgsize.x  + grid_idx.x); 
    // o.r = grids[idx].x; 
    // o.g = grids[idx].x;
    // o.b = grids[idx].x;  
 
    // ALPHA_TEST(o);   
    // gl_FragColor = vec4(world_pos.x,1.0,1.0,1.0);
  } 
}%
 