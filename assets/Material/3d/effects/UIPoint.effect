// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        diffuseColor : { value: [1,1,1,1], inspector: { type: color } }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;
  #include <cc-global>
  #include <cc-local>
  #include <input-standard>


  #if USE_TEXTURE
  out vec2 v_uv0;
  #endif
 
  void main () {
    StandardVertInput In;
    CCVertInput(In);
  

    vec4 pos = cc_matViewProj * cc_matWorld * In.position;
    #if USE_TEXTURE
    v_uv0 =In.uv;
    #endif

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float; 
  
  #include <alpha-test>

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif
  uniform UniformDatas{
    vec4 diffuseColor;
  };

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
    o *= texture(texture, v_uv0);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
      #endif
    #endif

    o *= diffuseColor;



    gl_FragColor = o;
  }
}%
